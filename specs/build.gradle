buildscript {
    repositories {
        maven {
            url 'https://nexus-internal.cloudbees.com/content/repositories/snapshots'
            credentials {
                username = System.getenv('NEXUS_USERNAME') ?: nexusUsername
                password = System.getenv('NEXUS_PASSWORD') ?: nexusPassword
            }
        }
        maven {
            url 'https://nexus-internal.cloudbees.com/content/groups/mirror'
            credentials {
                username = System.getenv('NEXUS_USERNAME') ?: nexusUsername
                password = System.getenv('NEXUS_PASSWORD') ?: nexusPassword
            }
        }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "com.cloudbees.cd.plugins:hen:2.0.0"
    }
}

plugins {
    id 'groovy'
    id 'idea'
    id 'java'
    id "com.cloudbees.cd.plugins.specs" version "1.9.2.0"
}

allprojects {
    apply plugin: 'com.cloudbees.cd.plugins.specs-hen'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

version = "2.0"
description = "EC-Docker Specs"

defaultTasks 'test'

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url 'https://nexus-internal.cloudbees.com/content/repositories/snapshots'
        credentials {
            username = System.getenv('NEXUS_USERNAME') ?: nexusUsername
            password = System.getenv('NEXUS_PASSWORD') ?: nexusPassword
        }
    }
    maven {
        url 'https://nexus-internal.cloudbees.com/content/groups/mirror'
        credentials {
            username = System.getenv('NEXUS_USERNAME') ?: nexusUsername
            password = System.getenv('NEXUS_PASSWORD') ?: nexusPassword
        }
    }
}

generateHenClasses {
    pluginName = 'EC-Docker'
}

ext {
    groovyVersion = "3.0.17"
    groovyGroup = "org.codehaus.groovy"

    spockVersion = "2.4-M1-groovy-3.0"

    specCoreVersion = "3.0.0"

    henVersion = "2.0.0"

    restAssuredVersion = "5.3.1"

    slf4jVersion = "1.7.36"
}

dependencies {

    implementation "$groovyGroup:groovy-all:$groovyVersion"
    implementation "org.spockframework:spock-core:$spockVersion"
    implementation("com.electriccloud:ec-specs-plugins-core:$specCoreVersion") {
        exclude(group: "org.codehaus.groovy", module: "groovy-all")
        exclude(group: "org.spockframework", module: "spock-core")
    }

    testImplementation("io.rest-assured:rest-assured:$restAssuredVersion") {
        // Exposure of Sensitive Information to an Unauthorized Actor in commons-codec:commons-codec before 1.13
        // Cxeb68d52e-5509
        // https://devhub.checkmarx.com/cve-details/Cxeb68d52e-5509/
        exclude(group: "commons-codec", module: "commons-codec")

        exclude(group: "org.apache.groovy", module: "groovy")
        exclude(group: "org.apache.groovy", module: "groovy-json")
        exclude(group: "org.apache.groovy", module: "groovy-xml")
        exclude(group: "org.apache.groovy", module: "groovy-bom")
    }

    // Dependency of jayway^^ that has to be added separately for JDK9+
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    implementation group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.7.1'

    implementation("com.cloudbees.cd.plugins:hen:$henVersion") {
        exclude(group: groovyGroup, module: "groovy-all")
        exclude(group: groovyGroup, module: "groovy")
    }

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
}

sendAllureReports {
    projectName = 'ec-docker'
}

configureTests {
    environmentName = findProperty('envName') ?: 'default'
    readEnvironmentVariables = true
    readSecrets = true
    dependsOn(['compileGroovy', 'compileTestGroovy', 'compileJava', 'compileTestJava', 'processResources', 'processTestResources'])
}

configurations {
    testCompile {
        extendsFrom testImplementation
        resolutionStrategy.force "io.qameta.allure:allure-spock:2.23.0"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
